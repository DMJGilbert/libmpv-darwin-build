name: ci

on: [push, pull_request]

jobs:
  ci:
    name: ci
    # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md
    runs-on: macos-15
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            sandbox = true
            sandbox-fallback = false

      - name: Nix version
        run: nix --version

      - name: Show Nix config
        run: nix config show

      - name: Xcode version
        run: /Applications/Xcode_16.1.0.app/Contents/Developer/usr/bin/xcodebuild -version

      # See ${workspace}/nix/overlays/xcode.md
      - name: Set up Xcode in Nix store
        run: |
          XCODE_APP=$(realpath /Applications/Xcode_16.3.0.app)
          NIX_STORE_PATH="/nix/store/r3h0x4iig6szgpr9dp3043vq0ghapiak-Xcode.app"
          HASH="sha256:0bzw3294f0jkkwdq11lmy14aaa6ir5q84d9lflrmwrpfg5q125k2"

          sudo cp -a $XCODE_APP $NIX_STORE_PATH
          sudo sqlite3 /nix/var/nix/db/db.sqlite "INSERT INTO ValidPaths (path,hash,registrationTime) VALUES ('$NIX_STORE_PATH','$HASH',$(date +%s))"

      - uses: DeterminateSystems/magic-nix-cache-action@v8

      - name: Determine version
        id: version
        run: |
          case "${GITHUB_REF}" in
          refs/tags/*)
            VERSION=${GITHUB_REF#refs/tags/}
            ;;
          *)
            VERSION=develop
            ;;
          esac

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo ${VERSION}

      - name: Build
        run: |
          VERSION=${{ steps.version.outputs.version }}
          echo \"$VERSION\" > nix/utils/default/version.nix
          nix build -v

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     if-no-files-found: error
      #     path: |
      #       result/*.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          tag_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: true
          files: |
            result/*.tar.gz
